% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Epoch_SliceR.R
\name{Epoch_SliceR}
\alias{Epoch_SliceR}
\title{Synthetise data as a function of defined Epoch}
\usage{
Epoch_SliceR(
  df,
  ID,
  columns_to_synthesize,
  epoch_length,
  sample_rate,
  session_duration
)
}
\arguments{
\item{df}{a data frame containing the data we want to synthetise at a defined epoch-level}

\item{ID}{a column from the data frame referencing the unique participants' identifiers}

\item{columns_to_synthesize}{columns of the data frame that we wish to synthetise at the epoch-level}

\item{epoch_length}{time duration over which we want to synthetise the data (in seconds)}

\item{sample_rate}{sample rate of the protocol}

\item{session_duration}{duration of the whole protocol}
}
\value{
a data frame that should be shorter.
}
\description{
This function will synthetise (i.e., compute the mean of) defined column(s) from a data frame depending on a specified epoch (i.e., a time interval over which we want to synthetise the data).
}
\examples{
#Find subdirectory of Example data in the original .txt format exported from AMTI Netforce software
# Note: we need to convert compressed RData to original txt file
files <- paste0("Postural_Data", LETTERS[1:6])

# Locate the directory containing the .RData files within the package
data_dir <- system.file("extdata", package = "BalanceMate")

# Create a temporary directory to store the .txt files
temp_data_dir <- file.path(tempdir(), "extdata")
dir.create(temp_data_dir, showWarnings = FALSE)

# Process each file: load, optionally add a blank row, and write to .txt
invisible(lapply(files, function(f) {
  # Load the .RData file from the package's extdata directory
  load(file.path(data_dir, paste0(f, ".RData")))

  data <- get(f)
  # Write the data to a .txt file in the temporary directory
  write.table(data, file = file.path(temp_data_dir, paste0(f, ".txt")), sep = ",",
  row.names = FALSE, col.names = FALSE, quote = FALSE)
}))

Data <- Merge_PosData(temp_data_dir, SampleRate = 100, SessionDuration = 100)

Epoch_SliceR(df = Data,
      ID = "file_name",
      columns_to_synthesize = c("CoP_X", "CoP_Y"),
      epoch_length = 1,
      sample_rate=100,
      session_duration = 100)


}
