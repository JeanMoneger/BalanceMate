% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_postural_indicators.R
\name{compute_postural_indicators}
\alias{compute_postural_indicators}
\title{Compute Postural indicators for specified time periods}
\usage{
compute_postural_indicators(
  data,
  CoPX_col,
  CoPY_col,
  ID,
  time_col = NULL,
  epoch_length = NULL,
  indicators
)
}
\arguments{
\item{data}{a dataframe containing the postural data}

\item{CoPX_col}{a column in the data frame storing the CoP-X data}

\item{CoPY_col}{a column in the data frame storing the CoP-Y data}

\item{ID}{a column in the data frame storing Participants' unique identifiers}

\item{time_col}{a column in the data frame storing Time course}

\item{epoch_length}{numeric value: epoch duration over which you want to compute the sway path length (in seconds)}

\item{indicators}{character string specifying the postural indicator to compute (can take multiple values). Possible values are "CoP_X", "CoP_Y", "SwayPathLength", "EllipseArea", "SD_CoP_X", and/or "SD_CoP_Y".}
}
\value{
a data frame containing the new postural measures that was synthetised at the ID level or at the epoch level (if specified).
}
\description{
Compute Postural indicators for specified time periods
}
\examples{
#Find subdirectory of Example data in the original .txt format exported from AMTI Netforce software
path_to_data <- system.file("extdata", package = "BalanceMate")
Data <- Merge_PosData(path_to_data, SampleRate = 100, SessionDuration = 331)
# Using the Epoch synthesis
result <- compute_postural_indicators(data = Data,
     CoPX_col = "CoP_X",
     CoPY_col = "CoP_Y",
     ID = "file_name",
     time_col = "Time",
     epoch_length = 1,
     indicators = c("CoP_X", "CoP_Y", "SwayPathLength", "EllipseArea", "SD_CoP_X", "SD_CoP_Y"))
print(result)

# Not using epochs: synthetising at the ID level
result <- compute_postural_indicators(data = Data,
      CoPX_col = "CoP_X",
      CoPY_col = "CoP_Y",
      ID = "file_name",
      indicators = c("CoP_X", "CoP_Y", "SwayPathLength", "EllipseArea", "SD_CoP_X", "SD_CoP_Y"))
print(result)
}
