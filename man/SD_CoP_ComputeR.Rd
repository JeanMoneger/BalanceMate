% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SD_CoP_ComputeR.R
\name{SD_CoP_ComputeR}
\alias{SD_CoP_ComputeR}
\title{Compute Mean Standard deviations of CoP-X and CoP-Y displacements for a specified time bin}
\usage{
SD_CoP_ComputeR(
  data,
  CoPX_col,
  CoPY_col,
  ID,
  time_col = NULL,
  epoch_length = NULL
)
}
\arguments{
\item{data}{a dataframe containing the postural data}

\item{CoPX_col}{a column in the data frame storing the CoP-X data}

\item{CoPY_col}{a column in the data frame storing the CoP-Y data}

\item{ID}{a column in the data frame storing Participants' unique identifiers}

\item{time_col}{a column in the data frame storing Time course}

\item{epoch_length}{numeric value: epoch duration over which you want to compute the sway path length (in seconds)}
}
\value{
a data frame containing the new postural measures that were synthetised at the ID level or at the epoch level (if specified).
}
\description{
Compute Mean Standard deviations of CoP-X and CoP-Y displacements for a specified time bin
}
\examples{
#Find subdirectory of Example data in the original .txt format exported from AMTI Netforce software
# Note: we need to convert compressed rdata to original txt file
files <- paste0("Postural_Data", LETTERS[1:6])

# Locate the directory containing the .Rdata files within the package
data_dir <- system.file("data", package = "BalanceMate")

# Create a temporary directory to store the .txt files
temp_data_dir <- file.path(tempdir(), "data")
dir.create(temp_data_dir, showWarnings = FALSE)

# Process each file: load, optionally add a blank row, and write to .txt
invisible(lapply(files, function(f) {
  # Load the .Rdata file from the package's extdata directory
  load(file.path(data_dir, paste0(f, ".Rdata")))

  data <- get(f)
  # Write the data to a .txt file in the temporary directory
  write.table(data, file = file.path(temp_data_dir, paste0(f, ".txt")), sep = ",",
  row.names = FALSE, col.names = FALSE, quote = FALSE)
}))

Data <- Merge_PosData(temp_data_dir, SampleRate = 100, SessionDuration = 100)

# Compute mean SD CoP-X and mean SD CoP-Y at the participant (ID level):
SD_CoP_ComputeR(Data, "CoP_X", "CoP_Y", "file_name")

# Synthetise SD CoP-X and SD CoP-Y for 1s time bins:
SD_CoP_ComputeR(Data, "CoP_X", "CoP_Y", "file_name", time_col = "Time", epoch_length = 1)

# Synthetise SD CoP-X and SD CoP-Y for 2s time bins:
SD_CoP_ComputeR(Data, "CoP_X", "CoP_Y", "file_name", time_col = "Time", epoch_length = 2)

}
