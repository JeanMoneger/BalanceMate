% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Butterworth_it.R
\name{Butterworth_it}
\alias{Butterworth_it}
\title{Apply Butterworth Filter to Specified Columns}
\usage{
Butterworth_it(
  Data,
  cutoff_freq,
  filter_order,
  sampling_rate,
  type = "low",
  Colname
)
}
\arguments{
\item{Data}{A data frame containing the data to filter.}

\item{cutoff_freq}{The cutoff frequency for the filter.}

\item{filter_order}{The order of the Butterworth filter.}

\item{sampling_rate}{The sampling rate of the data.}

\item{type}{The type of the filter ("low" or "high"). Default is "low".}

\item{Colname}{A vector of column names to filter.}
}
\value{
A data frame with the filtered columns added, suffixed with "_filtered".
}
\description{
This function applies a Butterworth filter to specified columns in a data frame.
}
\examples{
# Find subdirectory of Example data in the original .txt format exported from AMTI Netforce software
# Note: we need to convert compressed rdata to original txt file
files <- paste0("Postural_Data", LETTERS[1:6])

# Locate the directory containing the .Rdata files within the package
data_dir <- system.file("data", package = "BalanceMate")

# Create a temporary directory to store the .txt files
temp_data_dir <- file.path(tempdir(), "data")
dir.create(temp_data_dir, showWarnings = FALSE)

# Process each file: load, optionally add a blank row, and write to .txt
invisible(lapply(files, function(f) {
  # Load the .Rdata file from the package's extdata directory
  load(file.path(data_dir, paste0(f, ".Rdata")))

  data <- get(f)
  # Write the data to a .txt file in the temporary directory
  write.table(data, file = file.path(temp_data_dir, paste0(f, ".txt")), sep = ",",
  row.names = FALSE, col.names = FALSE, quote = FALSE)
}))

Data <- Merge_PosData(temp_data_dir, SampleRate = 100, SessionDuration = 100)


filtered_data <- Butterworth_it(
  Data = Data,
  cutoff_freq = 5,
  filter_order = 2,
  sampling_rate = 100,
  type = "low",
  Colname = c("CoP_X", "CoP_Y")
)
# Visualise results:
plot(x = filtered_data[500:700,]$Time,
      y = filtered_data[500:700,]$CoP_Y,
      type ="l",
      tck = 1,
      main = "Non filtered")
plot(x = filtered_data[500:700,]$Time,
      y = filtered_data[500:700,]$CoP_Y_filtered,
      type ="l",
      tck = 1,
      main = "filtered")
}
